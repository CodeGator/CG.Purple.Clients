{
  "api/CG.Purple.Clients.html": {
    "href": "api/CG.Purple.Clients.html",
    "title": "Namespace CG.Purple.Clients",
    "keywords": "Namespace CG.Purple.Clients Interfaces IPurpleHttpClient This interface represents a REST API client for the CG.Purple microservice. IPurpleHttpClientFactory This interface represents a factory for creating IPurpleHttpClient instances. IPurpleStatusMonitor This interface represents a status monitor for the CG.Purple microservice."
  },
  "api/CG.Purple.Clients.Internal.html": {
    "href": "api/CG.Purple.Clients.Internal.html",
    "title": "Namespace CG.Purple.Clients.Internal",
    "keywords": "Namespace CG.Purple.Clients.Internal Interfaces IHubConnection This interface represents a SignalR hub."
  },
  "api/CG.Purple.Clients.Internal.IHubConnection.html": {
    "href": "api/CG.Purple.Clients.Internal.IHubConnection.html",
    "title": "Interface IHubConnection",
    "keywords": "Interface IHubConnection This interface represents a SignalR hub. Namespace : CG.Purple.Clients.Internal Assembly : CG.Purple.Clients.dll Syntax public interface IHubConnection Remarks The purpose of this interface is for testability. In short, the Microsoft SignalR HubConnection type is simply not mockable, at all. Or at least, it isn't mockable in any way that I understand. If you know a way to mock the HubConnection type, please let me know. This type wraps a standard SignalR HubConnection instance and defers to that object at runtime. During testing, we can then mock up the IHubConnection type, and use that, instead. Properties ConnectionId Declaration string ConnectionId { get; } Property Value Type Description System.String HandshakeTimeout Declaration TimeSpan HandshakeTimeout { get; set; } Property Value Type Description TimeSpan KeepAliveInterval Declaration TimeSpan KeepAliveInterval { get; set; } Property Value Type Description TimeSpan ServerTimeout Declaration TimeSpan ServerTimeout { get; set; } Property Value Type Description TimeSpan State Declaration HubConnectionState State { get; } Property Value Type Description HubConnectionState Methods DisposeAsync() Declaration ValueTask DisposeAsync() Returns Type Description ValueTask InvokeCoreAsync(String, Type, Object[], CancellationToken) Declaration Task<object> InvokeCoreAsync(string methodName, Type returnType, object[] args, CancellationToken cancellationToken = null) Parameters Type Name Description System.String methodName Type returnType System.Object [] args CancellationToken cancellationToken Returns Type Description Task < System.Object > On(String, Type[], Func<Object[], Object, Task>, Object) Declaration IDisposable On(string methodName, Type[] parameterTypes, Func<object[], object, Task> handler, object state) Parameters Type Name Description System.String methodName Type [] parameterTypes Func < System.Object [], System.Object , Task > handler System.Object state Returns Type Description IDisposable Remove(String) Declaration void Remove(string methodName) Parameters Type Name Description System.String methodName SendCoreAsync(String, Object[], CancellationToken) Declaration Task SendCoreAsync(string methodName, object[] args, CancellationToken cancellationToken = null) Parameters Type Name Description System.String methodName System.Object [] args CancellationToken cancellationToken Returns Type Description Task StartAsync(CancellationToken) Declaration Task StartAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task StopAsync(CancellationToken) Declaration Task StopAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task StreamAsChannelCoreAsync(String, Type, Object[], CancellationToken) Declaration Task<ChannelReader<object>> StreamAsChannelCoreAsync(string methodName, Type returnType, object[] args, CancellationToken cancellationToken = null) Parameters Type Name Description System.String methodName Type returnType System.Object [] args CancellationToken cancellationToken Returns Type Description Task < ChannelReader < System.Object >> StreamAsyncCore<TResult>(String, Object[], CancellationToken) Declaration IAsyncEnumerable<TResult> StreamAsyncCore<TResult>(string methodName, object[] args, CancellationToken cancellationToken = null) Parameters Type Name Description System.String methodName System.Object [] args CancellationToken cancellationToken Returns Type Description IAsyncEnumerable <TResult> Type Parameters Name Description TResult Events Closed Declaration event Func<Exception?, Task>? Closed Event Type Type Description System.Nullable < Func < System.Nullable < Exception >, Task >> Reconnected Declaration event Func<string, Task>? Reconnected Event Type Type Description System.Nullable < Func < System.String , Task >> Reconnecting Declaration event Func<Exception?, Task>? Reconnecting Event Type Type Description System.Nullable < Func < System.Nullable < Exception >, Task >>"
  },
  "api/CG.Purple.Clients.IPurpleHttpClient.html": {
    "href": "api/CG.Purple.Clients.IPurpleHttpClient.html",
    "title": "Interface IPurpleHttpClient",
    "keywords": "Interface IPurpleHttpClient This interface represents a REST API client for the CG.Purple microservice. Namespace : CG.Purple.Clients Assembly : CG.Purple.Clients.dll Syntax public interface IPurpleHttpClient Properties HttpClient This property contains a reference to the inner HTTP client. Declaration HttpClient HttpClient { get; } Property Value Type Description HttpClient Methods GetMailStatusByKeyAsync(String, CancellationToken) This method sends a request to the CG.Purple microservice, for the status of the given mail message. Declaration Task<StatusResponse?> GetMailStatusByKeyAsync(string messageKey, CancellationToken cancellationToken = null) Parameters Type Name Description System.String messageKey The message key to use for the operation./ CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < StatusResponse >> A task to perform the operation that returns the response from the microservice, if one was sent, or NULL otherwise. GetTextStatusByKeyAsync(String, CancellationToken) This method sends a request to the CG.Purple microservice, for the status of the given text message. Declaration Task<StatusResponse?> GetTextStatusByKeyAsync(string messageKey, CancellationToken cancellationToken = null) Parameters Type Name Description System.String messageKey The message key to use for the operation./ CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < StatusResponse >> A task to perform the operation that returns the response from the microservice, if one was sent, or NULL otherwise. SendMailMessageAsync(MailStorageRequest, CancellationToken) This method sends a request to the CG.Purple microservice, to store a mail message. Declaration Task<StorageResponse?> SendMailMessageAsync(MailStorageRequest request, CancellationToken cancellationToken = null) Parameters Type Name Description MailStorageRequest request The request to use for the operation./ CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < StorageResponse >> A task to perform the operation that returns the response from the microservice, if one was sent, or NULL otherwise. SendTextMessageAsync(TextStorageRequest, CancellationToken) This method sends a request to the CG.Purple microservice, to store a text message. Declaration Task<StorageResponse?> SendTextMessageAsync(TextStorageRequest request, CancellationToken cancellationToken = null) Parameters Type Name Description TextStorageRequest request The request to use for the operation./ CancellationToken cancellationToken A cancellation token that is monitored for the lifetime of the method. Returns Type Description Task < System.Nullable < StorageResponse >> A task to perform the operation that returns the response from the microservice, if one was sent, or NULL otherwise."
  },
  "api/CG.Purple.Clients.IPurpleHttpClientFactory.html": {
    "href": "api/CG.Purple.Clients.IPurpleHttpClientFactory.html",
    "title": "Interface IPurpleHttpClientFactory",
    "keywords": "Interface IPurpleHttpClientFactory This interface represents a factory for creating IPurpleHttpClient instances. Namespace : CG.Purple.Clients Assembly : CG.Purple.Clients.dll Syntax public interface IPurpleHttpClientFactory Methods CreateClient() This method creates and returns a IPurpleHttpClient instance. Declaration IPurpleHttpClient CreateClient() Returns Type Description IPurpleHttpClient An IPurpleHttpClient instance."
  },
  "api/CG.Purple.Clients.IPurpleStatusMonitor.html": {
    "href": "api/CG.Purple.Clients.IPurpleStatusMonitor.html",
    "title": "Interface IPurpleStatusMonitor",
    "keywords": "Interface IPurpleStatusMonitor This interface represents a status monitor for the CG.Purple microservice. Namespace : CG.Purple.Clients Assembly : CG.Purple.Clients.dll Syntax public interface IPurpleStatusMonitor Properties IsConnected This property indicates whether or not the monitor is actively connected to the microservice. Declaration bool IsConnected { get; } Property Value Type Description System.Boolean Events Error This event is fired when an error is detected while processing a status update. Declaration event EventHandler<Exception>? Error Event Type Type Description System.Nullable < EventHandler < Exception >> Status This event is fired when the microservice sends a status update. Declaration event EventHandler<StatusNotification>? Status Event Type Type Description System.Nullable < EventHandler < StatusNotification >>"
  },
  "api/CG.Purple.Clients.Options.html": {
    "href": "api/CG.Purple.Clients.Options.html",
    "title": "Namespace CG.Purple.Clients.Options",
    "keywords": "Namespace CG.Purple.Clients.Options Classes PurpleClientOptions This class contains configuration options for CG.Purple client operations."
  },
  "api/CG.Purple.Clients.Options.PurpleClientOptions.html": {
    "href": "api/CG.Purple.Clients.Options.PurpleClientOptions.html",
    "title": "Class PurpleClientOptions",
    "keywords": "Class PurpleClientOptions This class contains configuration options for CG.Purple client operations. Inheritance System.Object PurpleClientOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Purple.Clients.Options Assembly : CG.Purple.Clients.dll Syntax public class PurpleClientOptions Properties DefaultBaseAddress This property contains an optional default base address. Declaration public string DefaultBaseAddress { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Purple.Clients.ViewModels.AttachmentRequest.html": {
    "href": "api/CG.Purple.Clients.ViewModels.AttachmentRequest.html",
    "title": "Class AttachmentRequest",
    "keywords": "Class AttachmentRequest This class represents a file attachment request. Inheritance System.Object AttachmentRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Purple.Clients.ViewModels Assembly : CG.Purple.Clients.dll Syntax public class AttachmentRequest Properties Data This property contains the base64 encoded data for the attachment. Declaration public string Data { get; set; } Property Value Type Description System.String FileName This property contains the file name for the attachment. Declaration public string FileName { get; set; } Property Value Type Description System.String Length This property contains the length for the attachment. Declaration public long Length { get; set; } Property Value Type Description System.Int64 MimeType This property contains the MIME type for the attachment. Declaration public string MimeType { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Purple.Clients.ViewModels.html": {
    "href": "api/CG.Purple.Clients.ViewModels.html",
    "title": "Namespace CG.Purple.Clients.ViewModels",
    "keywords": "Namespace CG.Purple.Clients.ViewModels Classes AttachmentRequest This class represents a file attachment request. MailStorageRequest This class represents a mail storage request. MessagePropertyRequest This class represents a message property request. StatusNotification This class represents a status notification for a message. StatusResponse This class represents a response to a status request. StorageResponse This class represents a response to a mail request. TextStorageRequest This class represents a text storage request."
  },
  "api/CG.Purple.Clients.ViewModels.MailStorageRequest.html": {
    "href": "api/CG.Purple.Clients.ViewModels.MailStorageRequest.html",
    "title": "Class MailStorageRequest",
    "keywords": "Class MailStorageRequest This class represents a mail storage request. Inheritance System.Object MailStorageRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Purple.Clients.ViewModels Assembly : CG.Purple.Clients.dll Syntax public class MailStorageRequest Constructors MailStorageRequest() This constructor creates a new instance of the MailStorageRequest class. Declaration public MailStorageRequest() Properties ArchiveAfterUtc This property contains an optional date for delaying the archiving, for this message. Declaration public DateTime? ArchiveAfterUtc { get; set; } Property Value Type Description System.Nullable < DateTime > Attachments This property contains the associated attachments, for the message. Declaration public List<AttachmentRequest> Attachments { get; set; } Property Value Type Description List < AttachmentRequest > BCC This property contains the 'BCC' address for the message. Declaration public string BCC { get; set; } Property Value Type Description System.String Body This property contains the body for the message. Declaration public string Body { get; set; } Property Value Type Description System.String CC This property contains the 'CC' address for the message. Declaration public string CC { get; set; } Property Value Type Description System.String From This property contains the 'From' address for the message. Declaration public string From { get; set; } Property Value Type Description System.String IsDisabled This property contains an optional disabled flag. Declaration public bool? IsDisabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > IsHtml This property indicates whether the Body property contains formatted HTML, or not. Declaration public bool IsHtml { get; set; } Property Value Type Description System.Boolean MaxErrors This property indicates the point at which messages processing should stop. Declaration public int? MaxErrors { get; set; } Property Value Type Description System.Nullable < System.Int32 > MessageKey This property contains a optional key for the message. When specified, this property must be unique or the request will fail. A unique key is generated, for the message, if one is not specified here. Declaration public string MessageKey { get; set; } Property Value Type Description System.String Priority This property contains an optional priority, for the message. Declaration public int? Priority { get; set; } Property Value Type Description System.Nullable < System.Int32 > ProcessAfterUtc This property contains an optional date for delaying the start of process, for this message. Declaration public DateTime? ProcessAfterUtc { get; set; } Property Value Type Description System.Nullable < DateTime > Properties This property contains the associated properties, for the message. Declaration public List<MessagePropertyRequest> Properties { get; set; } Property Value Type Description List < MessagePropertyRequest > ProviderType This property contains an optional provider type, for the message. Declaration public string ProviderType { get; set; } Property Value Type Description System.String Subject This property contains the subject for the message. Declaration public string Subject { get; set; } Property Value Type Description System.String To This property contains the 'To' address for the message. Declaration public string To { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Purple.Clients.ViewModels.MessagePropertyRequest.html": {
    "href": "api/CG.Purple.Clients.ViewModels.MessagePropertyRequest.html",
    "title": "Class MessagePropertyRequest",
    "keywords": "Class MessagePropertyRequest This class represents a message property request. Inheritance System.Object MessagePropertyRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Purple.Clients.ViewModels Assembly : CG.Purple.Clients.dll Syntax public class MessagePropertyRequest Properties PropertyName This property contains the name of the message property. Declaration public string PropertyName { get; set; } Property Value Type Description System.String Value This property contains the value of the message property. Declaration public string Value { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Purple.Clients.ViewModels.StatusNotification.html": {
    "href": "api/CG.Purple.Clients.ViewModels.StatusNotification.html",
    "title": "Class StatusNotification",
    "keywords": "Class StatusNotification This class represents a status notification for a message. Inheritance System.Object StatusNotification Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Purple.Clients.ViewModels Assembly : CG.Purple.Clients.dll Syntax public class StatusNotification Properties Error This property contains the error when the message failed to send. Declaration public string Error { get; set; } Property Value Type Description System.String MessageKey This property contains the key for the message. Declaration public string MessageKey { get; set; } Property Value Type Description System.String Sent This property indicates whether the message was sent. Declaration public bool Sent { get; set; } Property Value Type Description System.Boolean"
  },
  "api/CG.Purple.Clients.ViewModels.StatusResponse.html": {
    "href": "api/CG.Purple.Clients.ViewModels.StatusResponse.html",
    "title": "Class StatusResponse",
    "keywords": "Class StatusResponse This class represents a response to a status request. Inheritance System.Object StatusResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Purple.Clients.ViewModels Assembly : CG.Purple.Clients.dll Syntax public class StatusResponse Properties CreatedOnUtc This property contains the date/time when the message was created. Declaration public DateTime? CreatedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime > Error This property contains the error when the message failed to send. Declaration public string Error { get; set; } Property Value Type Description System.String FailedOnUtc This property contains the date/time when the message failed to send. Declaration public DateTime? FailedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime > MessageKey This property contains the key for the message. Declaration public string MessageKey { get; set; } Property Value Type Description System.String SentOnUtc This property contains the date/time when the message was sent. Declaration public DateTime? SentOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime >"
  },
  "api/CG.Purple.Clients.ViewModels.StorageResponse.html": {
    "href": "api/CG.Purple.Clients.ViewModels.StorageResponse.html",
    "title": "Class StorageResponse",
    "keywords": "Class StorageResponse This class represents a response to a mail request. Inheritance System.Object StorageResponse Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Purple.Clients.ViewModels Assembly : CG.Purple.Clients.dll Syntax public class StorageResponse Properties CreatedOnUtc This property contains the creation date/time for the message. Declaration public DateTime? CreatedOnUtc { get; set; } Property Value Type Description System.Nullable < DateTime > MessageKey This property contains the key for the message. Declaration public string MessageKey { get; set; } Property Value Type Description System.String"
  },
  "api/CG.Purple.Clients.ViewModels.TextStorageRequest.html": {
    "href": "api/CG.Purple.Clients.ViewModels.TextStorageRequest.html",
    "title": "Class TextStorageRequest",
    "keywords": "Class TextStorageRequest This class represents a text storage request. Inheritance System.Object TextStorageRequest Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : CG.Purple.Clients.ViewModels Assembly : CG.Purple.Clients.dll Syntax public class TextStorageRequest Constructors TextStorageRequest() This constructor creates a new instance of the TextStorageRequest class. Declaration public TextStorageRequest() Properties ArchiveAfterUtc This property contains an optional date for delaying the archiving, for this message. Declaration public DateTime? ArchiveAfterUtc { get; set; } Property Value Type Description System.Nullable < DateTime > Attachments This property contains the associated attachments, for the message. Declaration public List<AttachmentRequest> Attachments { get; set; } Property Value Type Description List < AttachmentRequest > Body This property contains the body for the message. Declaration public string Body { get; set; } Property Value Type Description System.String From This property contains the 'From' address for the message. Declaration public string From { get; set; } Property Value Type Description System.String IsDisabled This property contains an optional disabled flag. Declaration public bool? IsDisabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > MaxErrors This property indicates the point at which messages processing should stop. Declaration public int? MaxErrors { get; set; } Property Value Type Description System.Nullable < System.Int32 > MessageKey This property contains a optional key for the message. When specified, this property must be unique or the request will fail. A unique key is generated, for the message, if one is not specified here. Declaration public string MessageKey { get; set; } Property Value Type Description System.String Priority This property contains an optional priority, for the message. Declaration public int? Priority { get; set; } Property Value Type Description System.Nullable < System.Int32 > ProcessAfterUtc This property contains an optional date for delaying the start of process, for this message. Declaration public DateTime? ProcessAfterUtc { get; set; } Property Value Type Description System.Nullable < DateTime > Properties This property contains the associated properties, for the message. Declaration public List<MessagePropertyRequest> Properties { get; set; } Property Value Type Description List < MessagePropertyRequest > ProviderType This property contains an optional provider type, for the message. Declaration public string ProviderType { get; set; } Property Value Type Description System.String To This property contains the 'To' address for the message. Declaration public string To { get; set; } Property Value Type Description System.String"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type."
  },
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions001.html",
    "title": "Class WebApplicationBuilderExtensions001",
    "keywords": "Class WebApplicationBuilderExtensions001 This class contains extension methods related to the Microsoft.AspNetCore.Builder.WebApplicationBuilder type. Inheritance System.Object WebApplicationBuilderExtensions001 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.AspNetCore.Builder Assembly : CG.Purple.Clients.dll Syntax public static class WebApplicationBuilderExtensions001 Methods AddPurpleClients(WebApplicationBuilder, Action<PurpleClientOptions>, Nullable<ILogger>) This method adds the web based REST API clients for the CG.Purple microservice. Declaration public static WebApplicationBuilder AddPurpleClients(this WebApplicationBuilder webApplicationBuilder, Action<PurpleClientOptions> optionDelegate, ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. Action < PurpleClientOptions > optionDelegate The options delegate to use for the operation. System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style. AddPurpleClients(WebApplicationBuilder, Nullable<ILogger>) This method adds the web based REST API clients for the CG.Purple microservice. Declaration public static WebApplicationBuilder AddPurpleClients(this WebApplicationBuilder webApplicationBuilder, ILogger? bootstrapLogger = null) Parameters Type Name Description Microsoft.AspNetCore.Builder.WebApplicationBuilder webApplicationBuilder The web application builder to use for the operation. System.Nullable < ILogger > bootstrapLogger A bootstrap logger to use for the operation. Returns Type Description Microsoft.AspNetCore.Builder.WebApplicationBuilder The value of the webApplicationBuilder parameter, for chaining calls together, Fluent style."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.Purple.Clients.dll contains REST clients for the CG.Purple messaging microservice."
  }
}